:py:mod:`qmat.qcoeff.butcher`
=============================

.. py:module:: qmat.qcoeff.butcher

.. autoapi-nested-parse::

   Submodule to generate Q matrices based on Butcher tables

   .. rubric:: References

   .. [1] Wang, R., & Spiteri, R. J. (2007). Linear instability of the fifth-order
          WENO method. SIAM Journal on Numerical Analysis, 45(5), 1871-1901.
   .. [2] Alexander, R. (1977). Diagonally implicit Runge–Kutta methods for stiff
          ODE’s. SIAM Journal on Numerical Analysis, 14(6), 1006-1021.
   .. [3] Wanner, G., & Hairer, E. (1996). Solving ordinary differential equations
          II. Springer Berlin Heidelberg.
   .. [4] Butcher, J.C. (2003). Numerical methods for Ordianry Differential
          Equations. John Wiley & Sons.



Module Contents
---------------

.. py:class:: RK




   .. py:property:: nodes


   .. py:property:: weights


   .. py:property:: Q


   .. py:attribute:: A

      

   .. py:attribute:: b

      

   .. py:attribute:: c

      


.. py:data:: RK_SCHEMES

   

.. py:function:: checkAndStore(cls: RK) -> RK


.. py:function:: registerRK(cls: RK) -> RK


.. py:class:: FE




   Forward Euler method (cf Wikipedia)

   .. py:property:: order


   .. py:attribute:: aliases
      :value: ['EE']

      

   .. py:attribute:: A
      :value: [[0]]

      

   .. py:attribute:: b
      :value: [1]

      

   .. py:attribute:: c
      :value: [0]

      


.. py:class:: RK4




   Classical Runge Kutta method of order 4 (cf Wikipedia)

   .. py:property:: order


   .. py:property:: hCoeffs


   .. py:attribute:: aliases
      :value: ['ERK4']

      

   .. py:attribute:: A
      :value: [[0, 0, 0, 0], [0.5, 0, 0, 0], [0, 0.5, 0, 0], [0, 0, 1, 0]]

      

   .. py:attribute:: b

      

   .. py:attribute:: c

      


.. py:class:: RK4_38




   The 3/8-rule due to Kutta, order 4  (cf Wikipedia)

   .. py:property:: order


   .. py:attribute:: aliases
      :value: ['ERK4_38']

      

   .. py:attribute:: A
      :value: [[0, 0, 0, 0], None, None, None]

      

   .. py:attribute:: b

      

   .. py:attribute:: c

      


.. py:class:: RK53




   Explicit Runge-Kutta in 5 steps of order 3 from Wang & Spiteri [1]

   .. py:property:: order


   .. py:attribute:: aliases
      :value: ['ERK53']

      

   .. py:attribute:: A
      :value: [[0, 0, 0, 0, 0], None, None, None, None]

      

   .. py:attribute:: b

      

   .. py:attribute:: c

      


.. py:class:: RK21




   Explicit Runge-Kutta in 2 steps of order 1 from Wang & Spiteri [1]

   .. py:property:: order


   .. py:attribute:: aliases
      :value: ['ERK21']

      

   .. py:attribute:: A
      :value: [[0, 0], None]

      

   .. py:attribute:: b

      

   .. py:attribute:: c

      


.. py:class:: RK2




   Classical Runge Kutta method of order 2 (cf Wikipedia)

   .. py:property:: order


   .. py:attribute:: aliases
      :value: ['ERK2']

      

   .. py:attribute:: A
      :value: [[0, 0], None]

      

   .. py:attribute:: b
      :value: [0, 1]

      

   .. py:attribute:: c

      


.. py:class:: HEUN2




   Heun method of order 2 (cf Wikipedia)

   .. py:property:: order


   .. py:attribute:: aliases
      :value: ['HEUN']

      

   .. py:attribute:: A
      :value: [[0, 0], [1, 0]]

      

   .. py:attribute:: b

      

   .. py:attribute:: c
      :value: [0, 1.0]

      


.. py:class:: RK32




   Explicit Runge-Kutta in 3 steps of order 2 from Wang & Spiteri [1]

   .. py:property:: order


   .. py:attribute:: aliases
      :value: ['ERK32', 'RK32-SSP']

      

   .. py:attribute:: A
      :value: [[0, 0, 0], None, [0, 1, 0]]

      

   .. py:attribute:: b

      

   .. py:attribute:: c

      


.. py:class:: RK33




   Explicit Runge-Kutta in 3 steps of order 3 from Wang & Spiteri [1]

   .. py:property:: order


   .. py:attribute:: aliases
      :value: ['ERK33', 'RK33-SSP']

      

   .. py:attribute:: A
      :value: [[0, 0, 0], [1, 0, 0], None]

      

   .. py:attribute:: b

      

   .. py:attribute:: c

      


.. py:class:: RK65




   Explicit Runge-Kutta in 6 steps of order 5, (236a) from Butcher [4]

   .. py:property:: order


   .. py:property:: hCoeffs


   .. py:attribute:: aliases
      :value: ['ERK65']

      

   .. py:attribute:: A
      :value: [[0, 0, 0, 0, 0, 0], [0.25, 0, 0, 0, 0, 0], None, [0, 0, 0.5, 0, 0, 0], None, None]

      

   .. py:attribute:: b

      

   .. py:attribute:: c
      :value: [0, 0.25, 0.25, 0.5, 0.75, 1]

      


.. py:class:: BE




   Backward Euler method (also SDIRK1, see [2])

   .. py:property:: order


   .. py:attribute:: aliases
      :value: ['IE']

      

   .. py:attribute:: A
      :value: [[1]]

      

   .. py:attribute:: b
      :value: [1]

      

   .. py:attribute:: c
      :value: [1]

      


.. py:class:: TRAP




   Trapeze method (cf Wikipedia)

   .. py:property:: order


   .. py:attribute:: aliases
      :value: ['TRAPZ', 'CN']

      

   .. py:attribute:: A
      :value: [[0, 0], None]

      

   .. py:attribute:: b

      

   .. py:attribute:: c
      :value: [0, 1]

      


.. py:class:: GAUSS_LG




   Gauss-Legendre method of order 4 (cf Wikipedia)

   .. py:property:: order


   .. py:attribute:: aliases
      :value: ['GAUSS-LG']

      

   .. py:attribute:: A
      :value: [None, None]

      

   .. py:attribute:: b
      :value: [0.5, 0.5]

      

   .. py:attribute:: c

      


.. py:class:: SDIRK2




   First S-stable Diagonally Implicit Runge Kutta method of order 2 in two stages,
   from Alexander [2]

   .. py:property:: order


   .. py:attribute:: A
      :value: [None, None]

      

   .. py:attribute:: b

      

   .. py:attribute:: c

      


.. py:class:: SDIRK2_2




   Second S-stable Diagonally Implicit Runge Kutta method of order 2 in two stages,
   from Alexander [2]

   .. py:property:: order


   .. py:attribute:: aliases
      :value: ['SDIRK2-2']

      

   .. py:attribute:: A
      :value: [None, None]

      

   .. py:attribute:: b

      

   .. py:attribute:: c

      

   .. py:attribute:: CONV_TEST_NSTEPS
      :value: [64, 128, 256]

      


.. py:class:: SDIRK3




   S-stable Diagonally Implicit Runge Kutta method of order 3 in three stages,
   from Alexander [2]

   .. py:property:: order


   .. py:attribute:: A
      :value: [[0.43586652150845967, 0, 0], [0.28206673924577014, 0.43586652150845967, 0], None]

      

   .. py:attribute:: b

      

   .. py:attribute:: c
      :value: [0.43586652150845967, 0.7179332607542298, 1.0]

      


.. py:class:: SDIRK54




   S-stable Diagonally Implicit Runge Kutta method of order 4 in five stages,
   from Wanner and Hairer [3]

   .. py:property:: order


   .. py:attribute:: A
      :value: [None, None, None, None, None]

      

   .. py:attribute:: b

      

   .. py:attribute:: c

      


